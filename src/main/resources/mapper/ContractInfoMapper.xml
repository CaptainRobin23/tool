<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.tool.dao.ContractInfoMapper">
  <resultMap id="BaseResultMap" type="com.project.tool.model.ContractInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="num" jdbcType="NUMERIC" property="num" />
    <result column="contract_remark" jdbcType="VARCHAR" property="contractRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contract_code, contract_name, num, contract_remark, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from contract_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.project.tool.model.ContractInfo">
    insert into contract_info (id, contract_code, contract_name, 
      num, contract_remark, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{num,jdbcType=NUMERIC}, #{contractRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.project.tool.model.ContractInfo">
    insert into contract_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="contractRemark != null">
        contract_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=NUMERIC},
      </if>
      <if test="contractRemark != null">
        #{contractRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.tool.model.ContractInfo">
    update contract_info
    <set>
      <if test="contractCode != null">
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=NUMERIC},
      </if>
      <if test="contractRemark != null">
        contract_remark = #{contractRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.tool.model.ContractInfo">
    update contract_info
    set contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      num = #{num,jdbcType=NUMERIC},
      contract_remark = #{contractRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>